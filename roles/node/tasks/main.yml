---
- name: Rainbond | Copy private key
  copy:
    src: /grdata/services/ssh/builder_rsa
    dest: /root/.ssh/id_rsa
    mode: 0600
    backup: yes

- name: Rainbond | Copy public key
  copy:
    src: /grdata/services/ssh/builder_rsa.pub
    dest: /root/.ssh/id_rsa.pub
    mode: 0644
    backup: yes

- name: Rainbond | Copy kubeconfig from deploy
  copy:
    src: "{{  kubecfg_dir }}/admin.kubeconfig"
    dest: "/root/.kube/config"
    mode: 0755

- name: Rainbond | Copy node binary from deploy
  copy:
    src: "{{ local_tools }}/bin/node"
    dest: "{{ bin_dir }}/node"
    mode: 0755

- name: Rainbond | Copy node uuid
  copy:
    src: /opt/rainbond/.init/node.uuid
    dest: /tmp/node.uuid

- name: Rainbond | Prepare check node uuid
  template:
    src: node_uuid.sh.j2
    dest: /tmp/node_uuid.sh
    mode: 0777

- name: Rainbond | Write node uuid
  shell: "bash /tmp/node_uuid.sh > /tmp/write_node.log"

- name: Rainbond | Copy Master Node Rainbond Role 
  template:
    src: master.role.j2
    dest: "{{ node_role_dir }}/master.yaml"
  when: inventory_hostname in groups['master'] + groups['new-master']

- name: Rainbond | Copy Master Node UI Role
  template:
    src: ui.role.j2
    dest: "{{ node_role_dir }}/ui.yaml"
  when: inventory_hostname in groups['master'] + groups['new-master']

- name: Rainbond | Copy Master Node Base Role
  template:
    src: base.role.j2
    dest: "{{ node_role_dir }}/base.yaml"
  when: inventory_hostname in groups['master'] + groups['new-master']

#- name: Rainbond | Copy Master Worker Role
#  template:
#    src: worker.role.j2
#    dest: "{{ node_role_dir }}/worker.yaml"
#  when: inventory_hostname in groups['worker']

- name: Thirdparty | check k8s master
  stat: path=/etc/kubernetes/manifests/kube-apiserver.yaml
  register: check_k8s_master

- name: Thirdparty | Add Health Only Health Role
  template:
    src: thirdparty-k8s-master.yaml.j2
    dest: "{{ node_role_dir }}/thirdparty_k8s_master.yaml"
  when: check_k8s_master.stat.isreg is defined and deploy_type == "thirdparty"

- name: Thirdparty | check kubectl worker
  stat: path=/etc/kubernetes/kubelet.conf
  register: check_k8s_worker

- name: Thirdparty | Add Health Only Health Role
  template:
    src: thirdparty-k8s-worker.yaml.j2
    dest: "{{ node_role_dir }}/thirdparty_k8s_worker.yaml"
  when: check_k8s_worker.stat.isreg is defined and deploy_type == "thirdparty" 

- name: Rainbond | Copy Node Script
  template:
    src: start-node.sh.j2
    dest: "{{ script_dir }}/start-node.sh"
    mode: 0755

- name: Rainbond | Copy Node Env
  template:
    src: node.sh.j2
    dest: "{{ env_dir }}/node.sh"
    mode: 0755

- name: Rainbond | Copy Node Services
  template:
    src: node.service.j2
    dest: /etc/systemd/system/node.service

- name: Rainbond | Start Node
  shell: "systemctl daemon-reload && systemctl enable node && systemctl start node"

- name: Rainbond | Restart Node
  service:
    name: node
    state: restarted